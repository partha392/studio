// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow for suggesting a diagnosis based on symptoms.
 *
 * - suggestDiagnosis - A function that suggests a diagnosis based on symptoms.
 * - SuggestDiagnosisInput - The input type for the suggestDiagnosis function.
 * - SuggestDiagnosisOutput - The return type for the suggestDiagnosis function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestDiagnosisInputSchema = z.object({
  symptoms: z.string().describe('The symptoms reported by the patient.'),
});
export type SuggestDiagnosisInput = z.infer<typeof SuggestDiagnosisInputSchema>;

const SuggestDiagnosisOutputSchema = z.object({
  diagnoses: z.array(z.string()).describe('A list of likely diagnoses based on the symptoms, including TB, pneumonia, anemia, or skin infections.'),
});
export type SuggestDiagnosisOutput = z.infer<typeof SuggestDiagnosisOutputSchema>;

export async function suggestDiagnosis(input: SuggestDiagnosisInput): Promise<SuggestDiagnosisOutput> {
  return suggestDiagnosisFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestDiagnosisPrompt',
  input: {schema: SuggestDiagnosisInputSchema},
  output: {schema: SuggestDiagnosisOutputSchema},
  prompt: `You are a medical expert. Based on the symptoms provided, suggest a list of likely diagnoses, including TB, pneumonia, anemia, or skin infections.

Symptoms: {{{symptoms}}}

Diagnoses:`,
});

const suggestDiagnosisFlow = ai.defineFlow(
  {
    name: 'suggestDiagnosisFlow',
    inputSchema: SuggestDiagnosisInputSchema,
    outputSchema: SuggestDiagnosisOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
